// Generated by Xata Codegen 0.30.1. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "content",
    columns: [
      { name: "content_id", type: "int" },
      { name: "title", type: "text" },
      { name: "original_title", type: "text" },
      { name: "vote_average", type: "text" },
      { name: "overview", type: "text" },
      { name: "tagline", type: "text" },
      { name: "release_date", type: "datetime" },
      { name: "poster_url", type: "text" },
      { name: "backdrop_url", type: "text" },
      { name: "type", type: "text" },
      { name: "category", type: "link", link: { table: "categories" } },
      { name: "recommended", type: "bool", defaultValue: "false" },
    ],
  },
  {
    name: "categories",
    columns: [
      { name: "category_id", type: "int" },
      { name: "name", type: "text" },
    ],
    revLinks: [{ column: "category", table: "content" }],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Content = InferredTypes["content"];
export type ContentRecord = Content & XataRecord;

export type Categories = InferredTypes["categories"];
export type CategoriesRecord = Categories & XataRecord;

export type DatabaseSchema = {
  content: ContentRecord;
  categories: CategoriesRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL: "https://sansx-u5g6u4.us-east-1.xata.sh/db/kspotlight",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
